---
const { className, slides } = Astro.props;

import "swiper/css";
import "swiper/core";

import { Image, Picture } from "@astrojs/image/components";
---

<div class={"swiper mySwiper" + className}>
    <div class="swiper-wrapper">
        {
            slides.map((src, i) => {
                const type =
                    src.includes("webp") ||
                    src.includes("jpg") ||
                    src.includes("png")
                        ? "img"
                        : "video";
                switch (type) {
                    case "img":
                        return (
                            <div class="swiper-slide">
                                <Picture
                                    src={src}
                                    quality={100}
                                    loading="eager"
                                    formats={["avif", "webp", "jpeg"]}
                                    aspectRatio={"16:9"}
                                    widths={[1500, 2000]}
                                    fit={"cover"}
                                    alt=""
                                />
                            </div>
                        );
                    case "video":
                        return (
                            <div class="swiper-slide">
                                <video loop autoplay={i == 0} muted>
                                    <source
                                        src={`/vids/webm/${src}.webm`}
                                        type={`video/webm; codecs="vp9, vorbis"`}
                                    />
                                    <source
                                        src={`/vids/mp4/${src}.mp4`}
                                        type={`video/mp4; codecs="avc1.42E01E,mp4a.40.2"`}
                                    />
                                </video>
                            </div>
                        );
                    default:
                        return (
                            <div class="swiper-slide">
                                <h1>Unknown slide type</h1>
                            </div>
                        );
                }
            })
        }
    </div>
    <div class="swiper-button-next stroke">
        <i class="las la-angle-right" style="font-size: 48px"></i>
    </div>
    <div class="swiper-button-prev stroke">
        <i class="las la-angle-left" style="font-size: 48px"></i>
    </div>
</div>

<style>
    .swiper-slide img {
        display: block;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .swiper-slide {
        @apply flex items-center justify-center;
    }

    .swiper-button-next::after,
    .swiper-button-prev::after {
        content: "" !important;
    }

    .stroke {
        @apply transition-all;
        --stroke-color: black;
        --stroke-width: 2px;
        color: #ffc700 !important;
        text-shadow: var(--stroke-width) 0 0 var(--stroke-color),
            calc(var(--stroke-width) * -1) 0 0 var(--stroke-color),
            0 var(--stroke-width) 0 var(--stroke-color),
            0 calc(var(--stroke-width) * -1) 0 var(--stroke-color);
    }
</style>

<script>
    import Swiper from "swiper/bundle";
    import "swiper/css/bundle";

    const swiper = new Swiper(".swiper", {
        navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev",
        },
    });

    swiper.init();

    const vids = document.querySelectorAll(
        ".swiper video"
    ) as NodeListOf<HTMLVideoElement>;
    swiper.on("slideChange", function () {
        // Check if video is next or previous slide and hide all others
        for (let i = 0; i < vids.length; i++) {
            const vid = vids[i];
            if (
                i == swiper.activeIndex ||
                i == swiper.activeIndex - 1 ||
                i == swiper.activeIndex + 1
            ) {
                vid.classList.remove("hidden");
            } else {
                vid.classList.add("hidden");
            }
        }

        // Reset time when swiped to
        vids.forEach((vid) => {
            vid.pause();
            vid.currentTime = 0;
        });
        vids[swiper.activeIndex].play();
    });
</script>
