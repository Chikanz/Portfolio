---
export interface Props {
	frontmatter: {
		title: string;
		description: string;
		img: string;
		icons: string[];
	};
}

const { frontmatter, file, url } = Astro.props;

// console.log(Astro.props);

import "../styles/Post.css";

//Get next and previous links by globbing for mdx in current directory
//Hack because glob only accepts literals
let posts;
const Category = url.split("/").slice(1, -1).join("/");

if(Category === "Web")
	posts = await Astro.glob("../pages/Web/*.mdx");
else
	posts = await Astro.glob("../pages/Games/*.mdx");

const postIndex = posts.findIndex((post) => post.url === url);
const prevPost = postIndex - 1 >= 0 ? posts[postIndex - 1] : null;
const nextPost = postIndex + 1 < posts.length ? posts[postIndex + 1] : null;


---

<!DOCTYPE html>
<html lang="en" class="text-white font-sans bg-[#ffc700]">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="stylesheet" href="/LA/css/line-awesome.min.css">
		<title>{frontmatter.title} | Zac's Portfolio</title>
	</head>

	<body>
		<!-- Pagination + home links -->
		<div class="HeaderLinks relative flex w-full p-4 justify-between items-center text-black">
			<div>
				{prevPost && 
					<a class="flex items-center gap-5" href={prevPost.url}>
						<i class="las la-arrow-left " style="font-size: 48px"/>
						<p class="text-2xl">{prevPost.frontmatter.title}</p>
					</a>
				}
			</div>
			<a href={`/#${Category}`} class="absolute left-[50%] translate-x-[-50%]"><i class="las la-home" style="font-size: 48px"/></a>
			
			{nextPost && <a class="flex items-center gap-5" href={nextPost.url}>
				<p class="text-2xl text-right">{nextPost.frontmatter.title}</p>
				<i class="las la-arrow-right " style="font-size: 48px"/>
			</a>}
		</div>

		<!-- Post -->
		<article
			class="max-w-3xl mx-auto bg-[#6d57ff] ring-2 ring-black mt-2 rounded-md pb-8"
		>
			<!-- Title -->
			<header class="text-center p-10 pb-5">
				<h1 class="text-white-light text-5xl mb-3">
					{frontmatter.title}
				</h1>
				<h2 class="text-white-light text-2xl mb-3">
					{frontmatter.description}
				</h2>
			</header>

			<!-- Post -->
			<main class="px-16 text-lg">
				<slot />
			</main>
		</article>
	</body>
</html>

<style>
	.HeaderLinks > * {
		@apply hover:scale-105 transition-transform
	}
</style>

<script>
	import { fetchVids } from "../util/FetchGFY";
	fetchVids();
</script>
